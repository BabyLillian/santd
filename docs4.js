(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{360:function(s,e,a){"use strict";a.r(e),e.default='<h1 id="定制主题"><span>定制主题</span><a href="#定制主题" class="anchor">#</a></h1><p>Santd 的组件结构及样式和 Antd React 完全一致，你可以参考 Antd React 的定制方式进行配置。</p><p>Ant Design 设计规范和技术上支持灵活的样式定制，以满足业务和品牌上多样化的视觉需求，包括但不限于全局样式（主色、圆角、边框）和指定组件的视觉定制。</p><p><img src="https://zos.alipayobjects.com/rmsportal/zTFoszBtDODhXfLAazfSpYbSLSEeytoG.png" alt="theme"></p><h2 id="ant-design-san-的样式变量"><span>Ant Design San 的样式变量</span><a href="#ant-design-san-的样式变量" class="anchor">#</a></h2><p>antd 的样式使用了 <a href="http://lesscss.org/">Less</a> 作为开发语言，并定义了一系列全局/组件的样式变量，你可以根据需求进行相应调整。</p><p>以下是一些最常用的通用变量，所有样式变量可以在 <a href="https://github.com/ecomfe/santd/blob/master/src/core/styles/themes/default.less">这里</a> 找到。</p><pre><code class="language-javascript">@primary-color: #1890ff; // 全局主色\n@link-color: #1890ff; // 链接色\n@success-color: #52c41a; // 成功色\n@warning-color: #faad14; // 警告色\n@error-color: #f5222d; // 错误色\n@font-size-base: 14px; // 主字号\n@heading-color: rgba(0, 0, 0, 0.85); // 标题色\n@text-color: rgba(0, 0, 0, 0.65); // 主文本色\n@text-color-secondary : rgba(0, 0, 0, .45); // 次文本色\n@disabled-color : rgba(0, 0, 0, .25); // 失效色\n@border-radius-base: 4px; // 组件/浮层圆角\n@border-color-base: #d9d9d9; // 边框色\n@box-shadow-base: 0 2px 8px rgba(0, 0, 0, 0.15); // 浮层阴影</code></pre>\n<p>如果以上变量不能满足你的定制需求，可以给我们提 issue。</p><h2 id="定制方式"><span>定制方式</span><a href="#定制方式" class="anchor">#</a></h2><p>原理上是使用 less 提供的 <a href="http://lesscss.org/usage/#using-less-in-the-browser-modify-variables">modifyVars</a> 的方式进行覆盖变量。下面将针对不同的场景提供一些常用的定制方式。</p><h3 id="在-webpack-中定制主题"><span>在 webpack 中定制主题</span><a href="#在-webpack-中定制主题" class="anchor">#</a></h3><p>我们以 webpack@4 为例进行说明，以下是一个 webpack.config.js 的典型例子，对 <a href="https://github.com/webpack-contrib/less-loader">less-loader</a> 的 options 属性进行相应配置。</p><pre><code class="language-javascript">// webpack.config.js\nmodule.exports = {\n    rules: [{\n        test: /\\.less$/,\n        use: [{\n            loader: &#39;style-loader&#39;,\n        }, {\n            loader: &#39;css-loader&#39;, // translates CSS into CommonJS\n        }, {\n            loader: &#39;less-loader&#39;, // compiles Less to CSS\n            options: {\n                modifyVars: {\n                    &#39;primary-color&#39;: &#39;#1DA57A&#39;,\n                    &#39;link-color&#39;: &#39;#1DA57A&#39;,\n                    &#39;border-radius-base&#39;: &#39;2px&#39;,\n                    // or\n                    &#39;hack&#39;: `true; @import &quot;your-less-file-path.less&quot;;`, // Override with less file\n                },\n                javascriptEnabled: true,\n            },\n        }],\n        // ...other rules\n    }],\n    // ...other config\n}</code></pre>\n<p>注意 less-loader 的处理范围不要过滤掉 node_modules 下的 santd 包</p><h3 id="配置-less-变量文件"><span>配置 less 变量文件</span><a href="#配置-less-变量文件" class="anchor">#</a></h3><p>另外一种方式是建立一个单独的 less 变量文件，引入这个文件覆盖 santd.less 里的变量。</p><pre><code class="language-javascript">@import &#39;~santd/dist/santd.less&#39;; // 引入官方提供的 less 样式入口文件\n@import &#39;your-theme-file.less&#39;; // 用于覆盖上面定义的变量</code></pre>\n<p>注意，这种方式已经载入了所有组件的样式，不需要也无法和按需加载插件 babel-plugin-import 的 style 属性一起使用。</p>'}}]);