(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{531:function(e,t,n){"use strict";n.r(t);var o=n(0),a=n.n(o),s={template:'<section class="markdown"><h1 id="form-表单"><span>Form 表单</span><a href="#form-表单" class="anchor">#</a></h1><p>具有数据收集、校验和提交功能的表单，包含复选框、单选框、输入框、下拉选择框等元素。</p><h2 id="表单"><span>表单</span><a href="#表单" class="anchor">#</a></h2><p>我们为 <code>form</code> 提供了以下三种排列方式：</p><ul><li>水平排列：标签和表单控件水平排列；（默认）</li><li>垂直排列：标签和表单控件上下垂直排列；</li><li>行内排列：表单项水平行内排列。</li></ul><h2 id="表单域"><span>表单域</span><a href="#表单域" class="anchor">#</a></h2><p>表单一定会包含表单域，表单域可以是输入控件，标准表单域，标签，下拉菜单，文本域等。</p><p>这里我们封装了表单域 <code>&lt;Form.FormItem /&gt;</code></p><pre><code class="language-html">&lt;Form.FormItem &#123;&#123;...props}}&gt;...&lt;/Form.FormItem&gt;</code></pre><h2 id="代码演示"><span>代码演示</span><a href="#代码演示" class="anchor">#</a></h2></section>'},r={template:'<section class="markdown"><h2 id="api"><span>API</span><a href="#api" class="anchor">#</a></h2><h3 id="form："><span>Form：</span><a href="#form：" class="anchor">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>form</td><td>经 Form.create() 包装过的组件会自带 this.data.get(&#39;form&#39;) 属性</td><td>object</td><td>-</td></tr><tr><td>hideRequiredMark</td><td>隐藏所有表单项的必选标记</td><td>boolean</td><td>false</td></tr><tr><td>labelAlign</td><td>label 标签的文本对齐方式</td><td>&#39;left&#39; | &#39;right&#39;</td><td>&#39;right&#39;</td></tr><tr><td>labelCol</td><td>label 标签布局，同 <code>&lt;Col&gt;</code> 组件，设置 <code>span</code> <code>offset</code> 值，如 <code>{span: 3, offset: 12}</code> 或 <code>sm: {span: 3, offset: 12}</code></td><td>object</td><td>-</td></tr><tr><td>layout</td><td>表单布局</td><td>&#39;horizontal&#39;|&#39;vertical&#39;|&#39;inline&#39;</td><td>&#39;horizontal&#39;</td></tr><tr><td>on-submit</td><td>数据验证成功后回调事件</td><td>Function(e:Event)</td><td>-</td></tr><tr><td>wrapperCol</td><td>需要为输入控件设置布局样式时，使用该属性，用法同 labelCol</td><td>object</td><td>-</td></tr><tr><td>colon</td><td>配置 Form.Item 的 colon 的默认值</td><td>boolean</td><td>true</td></tr></tbody></table><h3 id="formcreateoptions"><span>Form.create(options)</span><a href="#formcreateoptions" class="anchor">#</a></h3><p>使用方式如下</p><pre><code class="language-javascript">CustomizedForm = Form.create({})({template: &#39;&lt;div&gt;customized form&lt;/div&gt;&#39;});</code></pre><p><code>options</code> 的配置如下</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>mapPropsToFields</td><td>把父组件的属性映射到表单项上（如：把 san-store 中的值读出），需要对返回值中的表单域数据用 Form.createFormField 标记，注意表单项将变成受控组件, error 等也需要一并手动传入</td><td>(form) =&gt; ({ [fieldName]: FormField { value } })</td></tr><tr><td>name</td><td>设置表单域内字段 id 的前缀</td><td>-</td></tr><tr><td>validateMessages</td><td>默认校验信息，可用于把默认错误信息改为中文等，格式与 newMessages 返回值一致</td><td>Object { [nested.path]: String }</td></tr><tr><td>onFieldsChange</td><td>当 Form.Item 子节点的值（包括 error）发生改变时触发，可以把对应的值转存到 san-store</td><td>Function(form, changedFields, allFields)</td></tr><tr><td>onValuesChange</td><td>任一表单域的值发生改变时的回调</td><td>Function(form, changedValues, allValues) =&gt; void</td></tr></tbody></table><p>经过 <code>Form.create</code> 包装的组件将会自带 <code>form</code> 属性，供外部组件在 <code>computed</code> 内使用，在方法内可以直接使用 <code>this</code> 调用， <code>form</code> 提供的API如下：</p><p>注意：使用 <code>getFieldsValue</code> <code>getFieldValue</code> <code>setFieldsValue</code> 等时，应确保对应的 field 已经用 <code>decorator</code>属性 注册过了。</p><table><thead><tr><th>方法</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>getFieldError</td><td>获取某个输入控件的 Error</td><td>Function(name)</td></tr><tr><td>getFieldsError</td><td>获取一组输入控件的 Error ，如不传入参数，则获取全部组件的 Error</td><td>Function([names: string[]])</td></tr><tr><td>getFieldsValue</td><td>获取一组输入控件的值，如不传入参数，则获取全部组件的值</td><td>Function([fieldNames: string[]])</td></tr><tr><td>getFieldValue</td><td>获取一个输入控件的值</td><td>Function(fieldName: string)</td></tr><tr><td>isFieldsTouched</td><td>判断是否任一输入控件经历过 getFieldDecorator 的值收集时机 options.trigger</td><td>(names?: string[]) =&gt; boolean</td></tr><tr><td>isFieldTouched</td><td>判断一个输入控件是否经历过 getFieldDecorator 的值收集时机 options.trigger</td><td>(name: string) =&gt; boolean</td></tr><tr><td>isFieldValidating</td><td>判断一个输入控件是否在校验状态</td><td>Function(name)</td></tr><tr><td>resetFields</td><td>重置一组输入控件的值（为 initialValue）与状态，如不传入参数，则重置所有组件</td><td>Function([names: string[]])</td></tr><tr><td>setFields</td><td>设置一组输入控件的值与错误状态：代码</td><td>({[fieldName]: {value: any, errors: [Error] }}) =&gt; void</td></tr><tr><td>setFieldsValue</td><td>设置一组输入控件的值</td><td>({ [fieldName]: value }) =&gt; void</td></tr><tr><td>validateFields</td><td>校验并获取一组输入域的值与 Error，若 fieldNames 参数为空，则校验全部组件</td><td>([fieldNames: string[]],[options: object],callback(errors, values)) =&gt; void</td></tr><tr><td>validateFieldsAndScroll</td><td>与 validateFields 相似，但校验完后，如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围</td><td>参考 validateFields</td></tr></tbody></table><h3 id="validatefieldsvalidatefieldsandscroll"><span>validateFields/validateFieldsAndScroll</span><a href="#validatefieldsvalidatefieldsandscroll" class="anchor">#</a></h3><pre><code class="language-javascript">const validateFields = this.validateFields;validateFields((errors, values) =&gt; {// ...});validateFields([&#39;field1&#39;, &#39;field2&#39;], (errors, values) =&gt; {// ...});validateFields([&#39;field1&#39;, &#39;field2&#39;], options, (errors, values) =&gt; {// ...});</code></pre><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>options.first</td><td>若为 true，则每一表单域的都会在碰到第一个失败了的校验规则后停止校验</td><td>boolean</td><td>false</td></tr><tr><td>options.firstFields</td><td>指定表单域会在碰到第一个失败了的校验规则后停止校验</td><td>String[]</td><td>[]</td></tr><tr><td>options.force</td><td>对已经校验过的表单域，在 validateTrigger 再次被触发时是否再次校验</td><td>boolean</td><td>false</td></tr><tr><td>options.scroll</td><td>定义 validateFieldsAndScroll 的滚动行为，详细配置见 (dom-scroll-into-view config)[<a href="https://github.com/yiminghe/dom-scroll-into-view#function-parameter%5D">https://github.com/yiminghe/dom-scroll-into-view#function-parameter]</a></td><td>Object</td><td>{}</td></tr></tbody></table><h3 id="validatefields-的-callback-参数示例"><span>validateFields 的 callback 参数示例</span><a href="#validatefields-的-callback-参数示例" class="anchor">#</a></h3><p>errors:</p><pre><code class="language-javascript">{&quot;userName&quot;: {&quot;errors&quot;: [{&quot;message&quot;: &quot;Please input your username!&quot;,&quot;field&quot;: &quot;userName&quot;}]},&quot;password&quot;: {&quot;errors&quot;: [{&quot;message&quot;: &quot;Please input your Password!&quot;,&quot;field&quot;: &quot;password&quot;}]}}</code></pre><p>values:</p><pre><code class="language-javascript">{&quot;userName&quot;: &quot;username&quot;,&quot;password&quot;: &quot;password&quot;,}</code></pre><p>Form.createFormField</p><p>用于标记 <code>mapPropsToFields</code> 返回的表单域数据</p><h3 id="decorator39options39"><span>decorator[&#39;options&#39;]</span><a href="#decorator39options39" class="anchor">#</a></h3><p>经过 decorator 包装的控件，数据同步将被 Form 接管，这会导致以下结果：</p><ol><li>你需要在组件内部dispatch <code>UI:form-item-interact</code> 事件，参数为<code>{filedValue, type}</code> <code>filedValue</code> 为组件内部派发的值，<code>type</code> 为触发动作，如 <code>change</code>。</li><li>你不能用控件的 <code>value</code> <code>defaultValue</code> 等属性来设置表单域的值，默认值可以用 <code>decorator</code> 里的 <code>initialValue</code>。</li><li>你不应该用双向绑定，可以使用 <code>this.setFieldsValue</code> 来动态改变表单值。</li></ol><h3 id="decorator39options39参数"><span>decorator[&#39;options&#39;]参数</span><a href="#decorator39options39参数" class="anchor">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>options.name</td><td>必填输入控件唯一标志。支持嵌套式的写法。</td><td>string</td><td></td></tr><tr><td>options.getValueFromEvent</td><td>可以把 change 的参数（如 event）转化为控件的值</td><td>function(..args)</td><td>reference</td></tr><tr><td>options.initialValue</td><td>子节点的初始值，类型、可选值均由子节点决定</td><td></td><td></td></tr><tr><td>options.normalize</td><td>转换默认的 value 给控件</td><td>function(value, prevValue, allValues): any</td><td>-</td></tr><tr><td>options.preserve</td><td>即便字段不再使用，也保留该字段的值</td><td>boolean</td><td>-</td></tr><tr><td>options.rules</td><td>校验规则，参考下方文档</td><td>object[]</td><td></td></tr><tr><td>options.trigger</td><td>收集子节点的值的时机</td><td>string</td><td>&#39;change&#39;</td></tr><tr><td>options.validateFirst</td><td>当某一规则校验不通过时，是否停止剩下的规则的校验</td><td>boolean</td><td>false</td></tr><tr><td>options.validateTrigger</td><td>校验子节点值的时机</td><td>string|string[]</td><td>&#39;change&#39;</td></tr><tr><td>options.valuePropName</td><td>子节点的值的属性，如 Switch 的是 &#39;checked&#39;</td><td>string</td><td>&#39;value&#39;</td></tr></tbody></table><h3 id="formformitem"><span>Form.FormItem</span><a href="#formformitem" class="anchor">#</a></h3><p>注意：一个 Form.FormItem 建议只放一个被 decorator属性 装饰过的 child，当有多个被装饰过的 child 时，help required validateStatus 无法自动生成。</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>colon</td><td>配合 label 属性使用，表示是否显示 label 后面的冒号</td><td>boolean</td><td>true</td></tr><tr><td>extra</td><td>额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。</td><td>string|slot</td><td></td></tr><tr><td>hasFeedback</td><td>配合 validateStatus 属性使用，展示校验状态图标，建议只配合 Input 组件使用</td><td>boolean</td><td>false</td></tr><tr><td>help</td><td>提示信息，如不设置，则会根据校验规则自动生成</td><td>string|slot</td><td></td></tr><tr><td>label</td><td>label 标签的文本</td><td>string|slot</td><td></td></tr><tr><td>labelCol</td><td>label 标签布局，同 <code>&lt;Col&gt;</code> 组件，设置 <code>span</code> <code>offset</code> 值，如 <code>{span: 3, offset: 12}</code> 或 <code>sm: {span: 3, offset: 12}</code>。你可以通过 <code>Form</code> 的 <code>labelCol</code> 进行统一设置。当和 <code>Form</code> 同时设置时，以 <code>FormItem</code> 为准。</td><td>object</td><td></td></tr><tr><td>required</td><td>是否必填，如不设置，则会根据校验规则自动生成</td><td>boolean</td><td>false</td></tr><tr><td>validateStatus</td><td>校验状态，如不设置，则会根据校验规则自动生成，可选：&#39;success&#39; &#39;warning&#39; &#39;error&#39; &#39;validating&#39;</td><td>string</td><td></td></tr><tr><td>wrapperCol</td><td>需要为输入控件设置布局样式时，使用该属性，用法同 <code>labelCol</code>。你可以通过 <code>Form</code> 的 <code>labelCol</code> 进行统一设置。当和 <code>Form</code> 同时设置时，以 <code>FormItem</code> 为准。</td><td>object</td><td></td></tr></tbody></table><h3 id="校验规则"><span>校验规则</span><a href="#校验规则" class="anchor">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>enum</td><td>枚举类型</td><td>string</td><td>-</td></tr><tr><td>len</td><td>字段长度</td><td>number</td><td>-</td></tr><tr><td>max</td><td>最大长度</td><td>number</td><td>-</td></tr><tr><td>message</td><td>校验文案</td><td>string</td><td>-</td></tr><tr><td>min</td><td>最小长度</td><td>number</td><td>-</td></tr><tr><td>pattern</td><td>正则表达式校验</td><td>RegExp</td><td>-</td></tr><tr><td>required</td><td>是否必选</td><td>boolean</td><td><code>false</code></td></tr><tr><td>transform</td><td>校验前转换字段值</td><td>function(value) =&gt; transformedValue:any</td><td>-</td></tr><tr><td>type</td><td>内建校验类型，<a href="https://github.com/yiminghe/async-validator#type">可选项</a></td><td>string</td><td>&#39;string&#39;</td></tr><tr><td>validator</td><td>自定义校验（注意，callback 必须被调用）</td><td>function(rule, value, callback)</td><td>-</td></tr><tr><td>whitespace</td><td>必选时，空格是否会被视为错误</td><td>boolean</td><td><code>false</code></td></tr></tbody></table><p>更多高级用法可研究 <a href="https://github.com/yiminghe/async-validator">async-validator</a>。</p></section>'},l={initData:()=>({isExpand:!1,code:"\n<pre><code class=\"language-html\">&lt;template>\n  &lt;div>\n      &lt;s-form layout=\"inline\" on-submit=\"handleSubmit\">\n        &lt;s-formitem validateStatus=\"{{userNameError ? 'error' : ''}}\" help=\"{{userNameError}}\">\n            &lt;s-input placeholder=\"username\" decorator=\"{{userNameDecorator}}\">\n                &lt;s-icon type=\"user\" style=\"color: rgba(0, 0, 0, .25);\" slot=\"prefix\" />\n            &lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem validateStatus=\"{{passwordError ? 'error': ''}}\" help=\"{{passwordError}}\">\n            &lt;s-input placeholder=\"password\" type=\"password\" decorator=\"{{passwordDecorator}}\">\n                &lt;s-icon type=\"lock\" style=\"color: rgba(0, 0, 0, .25);\" slot=\"prefix\" />\n            &lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem>\n            &lt;s-button type=\"primary\" htmlType=\"submit\" disabled=\"{{submitDisabled}}\">Log in&lt;/s-button>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, Button, Icon} from 'santd';\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nexport default Form.create({})({\n    components: {\n        's-form': Form,\n        's-formitem': Form.FormItem,\n        's-input': Input,\n        's-icon': Icon,\n        's-button': Button\n    },\n    computed: {\n        userNameError() {\n            const form = this.data.get('form');\n            return form && form.isFieldTouched('userName') && form.getFieldError('userName') || '';\n        },\n        passwordError() {\n            const form = this.data.get('form');\n            return form && form.isFieldTouched('password') && form.getFieldError('password') || '';\n        },\n        submitDisabled() {\n            const form = this.data.get('form');\n            return form && hasErrors(form.getFieldsError());\n        }\n    },\n    attached() {\n        this.validateFields();\n    },\n    initData () {\n        return {\n            userNameDecorator: {\n                name: 'userName',\n                rules: [{required: true, message: 'Please input your username!'}]\n            },\n            passwordDecorator: {\n                name: 'password',\n                rules: [{required: true, message: 'Please input your password!'}]\n            }\n        }\n    },\n    handleSubmit(e) {\n        e.preventDefault();\n        this.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    }\n});\n&lt;/script></code></pre>",text:'\n<h4 id="水平登录栏"><span>水平登录栏</span><a href="#水平登录栏" class="anchor">#</a></h4><p>水平登录栏，常用在顶部导航栏中。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(610).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402293"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},i={initData:()=>({isExpand:!1,code:'\n<pre><code class="language-html">&lt;template>\n  &lt;div style="width: 300px;">\n      &lt;s-form on-submit="handleSubmit" class="login-form">\n        &lt;s-formitem>\n            &lt;s-input placeholder="username" decorator="{{userNameDecorator}}">\n                &lt;s-icon type="user" slot="prefix" style="color: rgba(0, 0, 0, .25);" />\n            &lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem>\n            &lt;s-input placeholder="password" type="password" decorator="{{passwordDecorator}}">\n                &lt;s-icon type="lock" slot="prefix" style="color: rgba(0, 0, 0, .25);" />\n            &lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem>\n            &lt;s-checkbox decorator="{{rememberDecorator}}">Remember me&lt;/s-checkbox>\n            &lt;a class="login-form-forgot" href="">Forgot password&lt;/a>\n            &lt;s-button type="primary" htmlType="submit" class="login-form-button">\n                Log in\n            &lt;/s-button>\n            Or &lt;a href="">register now!&lt;/a>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, Icon, Checkbox, Button} from \'santd\';\n\nexport default Form.create({name: \'normal_login\'})({\n    components: {\n        \'s-form\': Form,\n        \'s-formitem\': Form.FormItem,\n        \'s-input\': Input,\n        \'s-icon\': Icon,\n        \'s-button\': Button,\n        \'s-checkbox\': Checkbox\n    },\n    initData () {\n        return {\n            userNameDecorator: {\n                name: \'userName\',\n                rules: [{required: true, message: \'The name cannot be empty\'}]\n            },\n            passwordDecorator: {\n                name: \'password\',\n                rules: [{required: true, message: \'Please input your Password!\'}]\n            },\n            rememberDecorator: {\n                name: \'remember\',\n                valuePropName: \'checked\',\n                initialValue: true\n            }\n        }\n    },\n    handleSubmit(e) {\n        e.preventDefault();\n        const form = this.data.get(\'form\');\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log(\'Received values of form: \', values);\n            }\n        });\n    }\n})\n&lt;/script>\n&lt;style>\n.login-form-forgot {\n    float: right;\n}\n.login-form-button {\n    width: 100%;\n}\n&lt;/style></code></pre>',text:'\n<h4 id="登录框"><span>登录框</span><a href="#登录框" class="anchor">#</a></h4><p>普通的登录框，可以容纳更多的元素。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(611).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402286"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},d={initData:()=>({isExpand:!1,code:"\n<pre><code class=\"language-html\">&lt;template>\n  &lt;div>\n      &lt;s-form labelCol=\"{{labelCol}}\" wrapperCol=\"{{wrapperCol}}\" on-submit=\"handleSubmit\">\n        &lt;s-formitem label=\"E-mail\">\n            &lt;s-input decorator=\"{{emailDecorator}}\">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"Password\" hasFeedBack=\"{{true}}\">\n            &lt;s-input-password decorator=\"{{passwordDecorator}}\" />\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"Confirm Password\" hasFeedBack=\"{{true}}\">\n            &lt;s-input-password decorator=\"{{confirmPasswordDecorator}}\" />\n        &lt;/s-formitem>\n        &lt;s-formitem >\n            &lt;span slot=\"label\">\n                Nickname&nbsp;\n                &lt;s-tooltip title=\"What do you want others to call you?\">\n                    &lt;s-icon type=\"question-circle-o\" />\n                &lt;/s-tooltip>\n            &lt;/span>\n            &lt;s-input decorator=\"{{nicknameDecorator}}\">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"Habitual Residence\">\n            &lt;s-cascader options={{residences}} decorator=\"{{residenceDecorator}}\">&lt;/s-cascader>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"Phone Number\">\n            &lt;s-input decorator=\"{{phoneNumberDecorator}}\">\n                &lt;s-select style=\"width: 70px;\" slot=\"addonBefore\" decorator=\"{{phonePrefixDecorator}}\">\n                    &lt;s-select-option value=\"86\">+86&lt;/s-select-option>\n                    &lt;s-select-option value=\"87\">+87&lt;/s-select-option>\n                &lt;/s-select>\n            &lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"website\">\n            &lt;s-autocomplete placeholder=\"website\" on-search=\"handleWebsiteSearch\" decorator=\"{{websiteDecorator}}\">\n                &lt;s-select-option s-for=\"website in websites\" value=\"{{website}}\">{{website}}&lt;/s-select-option>\n            &lt;/s-autocomplete>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"Captcha\" extra=\"We must make sure that you are a human.\">\n            &lt;s-row gutter={{8}}>\n            &lt;s-col span={{12}}>\n                &lt;s-input decorator=\"{{captchaDecorator}}\">&lt;/s-input>\n            &lt;/s-col>\n            &lt;s-col span={{12}}>\n              &lt;s-button>Get captcha&lt;/s-button>\n            &lt;/s-col>\n          &lt;/s-row>\n        &lt;/s-formitem>\n        &lt;s-formitem wrapperCol=\"{{tailWrapperCol}}\">\n            &lt;s-checkbox decorator=\"{{agreementDecorator}}\">I have read the &lt;a href=\"javascript:;\">agreement&lt;/a>&lt;/s-checkbox>\n        &lt;/s-formitem>\n        &lt;s-formitem wrapperCol=\"{{tailWrapperCol}}\">\n            &lt;s-button class=\"login-form-button\" type=\"primary\" htmlType=\"submit\">Register&lt;/s-button>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {\n    Row,\n    Col,\n    Form,\n    Input,\n    Icon,\n    Checkbox,\n    Cascader,\n    Button,\n    Select,\n    Tooltip,\n    AutoComplete\n} from 'santd';\n\nconst residences = [{\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [{\n        value: 'hangzhou',\n        label: 'Hangzhou',\n        children: [{\n            value: 'xihu',\n            label: 'West Lake'\n        }]\n    }]\n}, {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [{\n        value: 'nanjing',\n        label: 'Nanjing',\n        children: [{\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men'\n        }]\n    }]\n}];\n\nexport default Form.create({name: 'register'})({\n    components: {\n        's-form': Form,\n        's-formitem': Form.FormItem,\n        's-input': Input,\n        's-input-password': Input.Password,\n        's-icon': Icon,\n        's-button': Button,\n        's-checkbox': Checkbox,\n        's-cascader': Cascader,\n        's-select': Select,\n        's-select-option': Select.Option,\n        's-row': Row,\n        's-col': Col,\n        's-tooltip': Tooltip,\n        's-autocomplete': AutoComplete\n    },\n    initData () {\n        return {\n            residences: residences,\n            emailDecorator: {\n                name: 'email',\n                rules: [{\n                    type: 'email', message: 'The input is not valid E-mail!',\n                }, {\n                    required: true, message: 'Please input your E-mail!',\n                }]\n            },\n            passwordDecorator: {\n                name: 'password',\n                rules: [{\n                    required: true, message: 'Please input your password!',\n                }, {\n                    validator: this.validateToNextPassword.bind(this)\n                }]\n            },\n            confirmPasswordDecorator: {\n                name: 'confirm',\n                rules: [{\n                    required: true, message: 'Please confirm your password!',\n                }, {\n                    validator: this.compareToFirstPassword.bind(this),\n                }]\n            },\n            nicknameDecorator: {\n                name: 'nickname',\n                rules: [{required: true, message: 'Please input your nickname!', whitespace: true}]\n            },\n            residenceDecorator: {\n                name: 'residence',\n                initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                rules: [{type: 'array', required: true, message: 'Please select your habitual residence!'}]\n            },\n            phoneNumberDecorator: {\n                name: 'phone',\n                rules: [{required: true, message: 'Please input your phone number!'}]\n            },\n            phonePrefixDecorator: {\n                name: 'prefix',\n                initialValue: '86'\n            },\n            websiteDecorator: {\n                name: 'website',\n                rules: [{required: true, message: 'Please input website!'}]\n            },\n            captchaDecorator: {\n                name: 'captcha',\n                rules: [{required: true, message: 'Please input the captcha you got!'}]\n            },\n            agreementDecorator: {\n                name: 'agreement',\n                valuePropName: 'checked'\n            },\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 }\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 }\n            },\n            tailWrapperCol: {\n                xs: { span: 24, offset: 0},\n                sm: { span: 16, offset: 8}\n            }\n        }\n    },\n    validateToNextPassword(rule, value, callback) {\n        const form = this.data.get('form');\n        if (value && this.data.get('confirmDirty')) {\n            form.validateFields(['confirm'], {force: true});\n        }\n        callback();\n    },\n    compareToFirstPassword(rule, value, callback) {\n        const form = this.data.get('form');\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    },\n    handleWebsiteSearch(value){\n        let list;\n        if (!value) {\n            list = [];\n        }\n        else {\n            list = ['.com', '.org', '.net'].map(domain => &#96;&#36;&#123;value}&#36;&#123;domain}&#96;);\n        }\n        this.data.set('websites', list);\n    },\n    handleSubmit(e) {\n        e.preventDefault();\n        this.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    }\n})\n&lt;/script>\n&lt;style>\n.login-form-forgot {\n    float: right;\n}\n.login-form-button {\n    width: 160px;\n}\n&lt;/style></code></pre>",text:'\n<h4 id="注册新用户"><span>注册新用户</span><a href="#注册新用户" class="anchor">#</a></h4><p>用户填写必须的信息以注册新用户。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(614).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402273"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},c={initData:()=>({isExpand:!1,code:'\n<pre><code class="language-html">&lt;template>\n    &lt;div>\n        &lt;searchform>&lt;/searchform>\n        &lt;div class="search-result-list">Search Result List&lt;/div>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, Button, Row, Col, Icon} from \'santd\';\n\nconst decorator = [];\nfor (let i = 0; i &lt; 10; i++) {\n    decorator.push({\n        name: \'field_\' + i,\n        rules: [{\n            required: true,\n            message: \'Input something!\'\n        }]\n    })\n}\n\nconst AdvancedSearchForm = {\n    components: {\n        \'s-form\': Form,\n        \'s-formitem\': Form.FormItem,\n        \'s-row\': Row,\n        \'s-col\': Col,\n        \'s-input\': Input,\n        \'s-button\': Button,\n        \'s-icon\': Icon\n    },\n    initData() {\n        return {\n            decorator: decorator,\n            expand: false\n        }\n    },\n    computed: {\n        count() {\n            return this.data.get(\'expand\') ? 10 : 6;\n        }\n    },\n    handleSearch(e) {\n        e.preventDefault();\n        this.validateFields((err, values) => {\n            console.log(\'Received values of form: \', values);\n        });\n    },\n    handleReset() {\n        this.resetFields();\n    },\n    handleToggle() {\n        const expand = this.data.get(\'expand\');\n        this.data.set(\'expand\', !expand);\n    },\n    template: &#96;&lt;div>&lt;s-form\n        class="san-advanced-search-form"\n        on-submit="handleSearch"\n    >\n        &lt;s-row gutter="{{24}}">\n            &lt;s-col span="{{8}}" key="{{i}}" s-for="field, index in decorator" style="{{index &lt; count ? \'display: block;\' : \'display: none;\'}}">\n                &lt;s-formitem label="{{\'filed \' + index}}">\n                    &lt;s-input decorator="{{field}}" placeholder="placeholder">&lt;/s-input>\n                &lt;/s-formitem>\n            &lt;/s-col>\n        &lt;/s-row>\n        &lt;s-row>\n            &lt;s-col span="{{24}}" style="text-align: right;">\n                &lt;s-button type="primary" htmlType="submit">Search&lt;/s-button>\n                &lt;s-button style="margin-left: 8px;" on-click="handleReset">Clear&lt;/s-button>\n                &lt;a style="margin-left: 8px; font-size: 12px;" on-click="handleToggle">Collapse&lt;/a>\n            &lt;/s-col>\n        &lt;/s-row>\n    &lt;/s-form>&lt;/div>&#96;\n};\n\nconst wrappedAdvancedSearchForm = Form.create({name: \'advanced_search\'})(AdvancedSearchForm);\n\nexport default {\n    components: {\n        searchform: wrappedAdvancedSearchForm\n    }\n}\n&lt;/script>\n&lt;style>\n.san-form.san-advanced-search-form {\n    padding: 24px;\n    background: #fbfbfb;\n    border: 1px solid #d9d9d9;\n    border-radius: 6px;\n}\n\n.san-advanced-search-form .san-form-item .san-row {\n    display: flex;\n}\n\n.search-result-list {\n    margin-top: 16px;\n    border: 1px dashed #e9e9e9;\n    border-radius: 6px;\n    background-color: #fafafa;\n    min-height: 200px;\n    text-align: center;\n    padding-top: 80px;\n}\n&lt;/style></code></pre>',text:'\n<h4 id="高级搜索"><span>高级搜索</span><a href="#高级搜索" class="anchor">#</a></h4><p>三列栅格式的表单排列方式，常用于数据表格的高级搜索。\n有部分定制的样式代码，由于输入标签长度不确定，需要根据具体情况自行调整。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(617).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402261"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},p={initData:()=>({isExpand:!1,code:"\n<pre><code class=\"language-html\">&lt;template>\n    &lt;div>\n        &lt;s-button type=\"primary\" on-click=\"showModal\">New Collection&lt;/s-button>\n        &lt;s-collectioncreateform visible=\"{{visible}}\" on-cancel=\"hideModal\" on-ok=\"hideModal\">&lt;/s-collectioncreateform>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, Radio, Modal, Button} from 'santd';\n\nconst collectionCreateForm = Form.create({name: 'form_in_modal'})({\n    components: {\n        's-modal': Modal,\n        's-form': Form,\n        's-formitem': Form.FormItem,\n        's-input': Input,\n        's-textarea': Input.TextArea,\n        's-radiogroup': Radio.Group,\n        's-radio': Radio\n    },\n    initData() {\n        return {\n            titleDecorator: {\n                name: 'title',\n                rules: [{required: true, message: 'Please input the title of collection!'}]\n            },\n            descriptionDecorator: {\n                name: 'description'\n            },\n            modifierDecorator: {\n                name: 'modifier',\n                initialValue: 'public'\n            }\n        }\n    },\n    handleCancel() {\n        this.fire('cancel');\n    },\n    handleCreate() {\n        const form = this.data.get('form');\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            console.log('Received values of form: ', values);\n            form.resetFields();\n            this.fire('ok');\n        });\n    },\n    template: &#96;\n        &lt;div>\n            &lt;s-modal\n                title=\"Create a new collection\"\n                okText=\"Create\"\n                visible=\"{{visible}}\"\n                on-cancel=\"handleCancel\"\n                on-ok=\"handleCreate\"\n            >\n                &lt;s-form layout=\"vertical\">\n                    &lt;s-formitem label=\"Title\">\n                        &lt;s-input decorator=\"{{titleDecorator}}\">&lt;/s-input>\n                    &lt;/s-formitem>\n                    &lt;s-formitem label=\"Description\">\n                        &lt;s-textarea decorator=\"{{descriptionDecorator}}\">&lt;/s-textarea>\n                    &lt;/s-formitem>\n                    &lt;s-formitem class=\"collection-create-form_last-form-item\">\n                        &lt;s-radiogroup decorator=\"{{modifierDecorator}}\">\n                            &lt;s-radio value=\"public\">Public&lt;/s-radio>\n                            &lt;s-radio value=\"private\">Private&lt;/s-radio>\n                        &lt;/s-radiogroup>\n                    &lt;/s-formitem>\n                &lt;/s-form>\n            &lt;/s-modal>\n        &lt;/div>\n    &#96;\n});\n\nexport default {\n    components: {\n        's-button': Button,\n        's-modal': Modal,\n        's-collectioncreateform': collectionCreateForm\n    },\n    initData() {\n        visible: false\n    },\n    showModal() {\n        this.data.set('visible', true);\n    },\n    hideModal() {\n        this.data.set('visible', false);\n    }\n};\n&lt;/script>\n\n&lt;style>\n.collection-create-form_last-form-item {\n    margin-bottom: 0;\n}\n&lt;/style></code></pre>",text:'\n<h4 id="弹出层中的新建表单"><span>弹出层中的新建表单</span><a href="#弹出层中的新建表单" class="anchor">#</a></h4><p>当用户访问一个展示了某个列表的页面，想新建一项但又不想跳转页面时，可以用 Modal 弹出一个表单，用户填写必要信息后创建新的项。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(620).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402250"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},m={initData:()=>({isExpand:!1,code:'\n<pre><code class="language-html">&lt;template>\n  &lt;div>\n      &lt;s-form on-submit="handleSubmit">\n        &lt;s-formitem\n            s-for="item, index in keys trackBy item"\n            label="{{index === 0 ? \'Passengers\' : \'\'}}"\n            wrapperCol="{{index === 0 ? formItemLayout.wrapperCol : formItemLayoutWithOutLabel.wrapperCol}}"\n            labelCol="{{index === 0 ? formItemLayout.labelCol : {}}}"\n            required="{{false}}"\n            key="{{item}}"\n        >\n            &lt;s-input decorator="{{decorators[index]}}" placeholder="passenger name" style="width: 60%; margin-right: 8px; display: inline-block;">&lt;/s-input>\n            &lt;s-icon s-if="keys.length > 1" class="dynamic-delete-button" type="delete" on-click="handleRemove(item)">&lt;/s-icon>\n        &lt;/s-formitem>\n        &lt;s-formitem wrapperCol="{{formItemLayoutWithOutLabel.wrapperCol}}">\n            &lt;s-button type="dashed" on-click="handleAdd" style="width: 60%;">\n                &lt;s-icon type="plus">&lt;/s-icon>\n                Add field\n            &lt;/s-button>\n        &lt;/s-formitem>\n        &lt;s-formitem wrapperCol="{{formItemLayoutWithOutLabel.wrapperCol}}">\n            &lt;s-button type="primary" htmlType="submit">Submit&lt;/s-button>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, Icon, Button} from \'santd\';\n\nlet id = 0;\n\nexport default Form.create({name: \'dynamic_form_item\'})({\n    components: {\n        \'s-form\': Form,\n        \'s-formitem\': Form.FormItem,\n        \'s-input\': Input,\n        \'s-icon\': Icon,\n        \'s-button\': Button\n    },\n    initData () {\n        return {\n            formItemLayout: {\n                wrapperCol: {\n                    xs: {span: 24},\n                    sm: {span: 20}\n                },\n                labelCol: {\n                    xs: {span: 24},\n                    sm: {span: 4}\n                }\n            },\n            formItemLayoutWithOutLabel: {\n                wrapperCol: {\n                    xs: {span: 24, offset: 0},\n                    sm: {span: 20, offset: 4}\n                }\n            }\n        }\n    },\n    inited() {\n        this.getFieldProps(\'keys\', {initialValue: []});\n    },\n    computed: {\n        keys() {\n            const form = this.data.get(\'form\');\n            if (form) {\n                return form.getFieldValue(\'keys\');\n            }\n            return [];\n        },\n        decorators() {\n            const keys = this.data.get(\'keys\') || [];\n            return keys.map((key, index) => {\n                return {\n                    name: \'names[\'+ key + \']\',\n                    rules: [{\n                        required: true,\n                        whitespace: true,\n                        message: "Please input passenger\'s name or delete this field."\n                    }]\n                }\n            });\n        }\n    },\n    handleSubmit(e) {\n        e.preventDefault();\n        this.validateFields((err, values) => {\n            if (!err) {\n                const { keys, names } = values;\n                console.log(\'Received values of form: \', values);\n                console.log(\'Merged values:\', keys.map(key => names[key]));\n            }\n        });\n    },\n    handleAdd() {\n        const keys = this.getFieldValue(\'keys\');\n        const nextKeys = keys.concat(id++);\n\n        this.setFieldsValue({\n            keys: nextKeys\n        });\n    },\n    handleRemove(k) {\n        const keys = this.getFieldValue(\'keys\');\n        if (keys.length === 1) {\n            return;\n        }\n\n        this.setFieldsValue({\n            keys: keys.filter(key => key !== k)\n        })\n    }\n})\n&lt;/script>\n&lt;style>\n.dynamic-delete-button {\n  cursor: pointer;\n  position: relative;\n  top: 4px;\n  font-size: 24px;\n  color: #999;\n  transition: all .3s;\n}\n.dynamic-delete-button:hover {\n  color: #777;\n}\n.dynamic-delete-button[disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n&lt;/style></code></pre>',text:'\n<h4 id="动态增减表单项"><span>动态增减表单项</span><a href="#动态增减表单项" class="anchor">#</a></h4><p>动态增加、减少表单项。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(623).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402234"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},u={initData:()=>({isExpand:!1,code:"\n<pre><code class=\"language-html\">&lt;template>\n  &lt;div>\n      &lt;s-form layout=\"inline\" on-submit=\"handleSubmit\">\n        &lt;s-formitem label=\"Price\">\n            &lt;s-priceinput decorator=\"{{priceInputDecorator}}\">&lt;/s-priceinput>\n        &lt;/s-formitem>\n        &lt;s-formitem>\n            &lt;s-button type=\"primary\" htmlType=\"submit\">Submit&lt;/s-button>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport san from 'san';\nimport {Form, Input, Button, Select} from 'santd';\n\nconst PriceInput = san.defineComponent({\n    components: {\n        's-input': Input,\n        's-select': Select,\n        's-selectoption': Select.Option\n    },\n    handleNumberChange(value) {\n        const number = parseInt(value || 0, 10);\n        if (Number.isNaN(number)) {\n            return;\n        }\n        this.data.set('value.number', number);\n    },\n    handleCurrencyChange(value) {\n        this.data.set('value.currency', value);\n    },\n    messages: {\n        'UI:form-item-interact'(payload) {\n            const value = this.data.get('value');\n            this.dispatch('UI:form-item-interact', {fieldValue: value, type: 'change'});\n        }\n    },\n    template: &#96;&lt;span>\n        &lt;s-input type=\"text\" size=\"{{size}}\" value=\"{{value.number}}\" style=\"width: 50%; margin-right: 3%; display: inline-block;\" on-change=\"handleNumberChange\">&lt;/s-input>\n        &lt;s-select value=\"{{value.currency}}\" size=\"{{size}}\" style=\"width: 40%; display: inline-block;\" on-change=\"handleCurrencyChange\">\n            &lt;s-selectoption value=\"rmb\">RMB&lt;/s-selectoption>\n            &lt;s-selectoption value=\"dollar\">Dollar&lt;/s-selectoption>\n        &lt;/s-select>\n    &lt;/span>&#96;\n});\n\nexport default Form.create({name: 'customized_form_controls'})({\n    components: {\n        's-form': Form,\n        's-formitem': Form.FormItem,\n        's-button': Button,\n        's-priceinput': PriceInput\n    },\n    initData () {\n        return {\n            priceInputDecorator: {\n                name: 'price',\n                initialValue: {number: 0, currency: 'rmb'},\n                rules: [{validator: this.checkPrice.bind(this)}]\n            }\n        }\n    },\n    checkPrice(rule, value, callback) {\n        if (value.number > 0) {\n            callback();\n            return;\n        }\n        callback('Price must greater than zero!');\n    },\n    handleSubmit(e) {\n        e.preventDefault();\n        this.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    }\n})\n&lt;/script></code></pre>",text:'\n<h4 id="自定义表单控件"><span>自定义表单控件</span><a href="#自定义表单控件" class="anchor">#</a></h4><p>自定义或第三方的表单控件，也可以与 Form 组件一起使用。只要该组件遵循以下的约定：</p><p>提供受控属性 <code>value</code> 或其它与 <code>valuePropName</code> 的值同名的属性。\n提供名为 <code>UI:form-item-interact</code> 的事件，参数请参考下面的代码示例。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(626).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402223"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},h={initData:()=>({isExpand:!1,code:"\n<pre><code class=\"language-html\">&lt;template>\n    &lt;div>\n        &lt;s-customizedform s-bind=\"{{fields}}\" on-change=\"handleChange\">&lt;/s-customizedform>\n        &lt;pre class=\"language-bash\">\n            {{code}}\n        &lt;/pre>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport san from 'san';\nimport {Form, Input} from 'santd';\n\nconst CustomizedForm = Form.create({\n    name: 'global_state',\n    onFieldsChange(form, changedFields, allFields) {\n        form.fire('change', changedFields);\n    },\n    mapPropsToFields(form) {\n        const username = form.data.get('username');\n        return {\n            username: Form.createFormField({\n                value: username.value\n            })\n        };\n    },\n    onValuesChange(form, values, allValues) {\n        console.log(values);\n    }\n})({\n    components: {\n        's-form': Form,\n        's-formitem': Form.FormItem,\n        's-input': Input\n    },\n    initData () {\n        return {\n            userNameDecorator: {\n                name: 'username',\n                rules: [{required: true, message: 'Please input your username!'}]\n            }\n        }\n    },\n    template: &#96;&lt;div>\n        &lt;s-form layout=\"inline\">\n            &lt;s-formitem label=\"username\">\n                &lt;s-input decorator=\"{{userNameDecorator}}\"/>\n            &lt;/s-formitem>\n        &lt;/s-form>\n    &lt;/div>&#96;\n});\n\nexport default {\n    components: {\n        's-customizedform': CustomizedForm\n    },\n    computed: {\n        userNameError() {\n            const form = this.data.get('form');\n            return form && form.isFieldTouched('userName') && form.getFieldError('userName') || '';\n        },\n        code() {\n            return JSON.stringify(this.data.get('fields'), null, 2);\n        }\n    },\n    initData () {\n        return {\n            fields: {\n                username: {\n                    value: 'franklin'\n                }\n            }\n        }\n    },\n    handleChange(value) {\n        this.data.set('fields', value);\n    }\n};\n&lt;/script></code></pre>",text:'\n<h4 id="表单数据存储于上层组件"><span>表单数据存储于上层组件</span><a href="#表单数据存储于上层组件" class="anchor">#</a></h4><p>通过使用 onFieldsChange 与 mapPropsToFields，可以把表单的数据存储到上层组件或者 san-store 中\n注意：mapPropsToFields 里面返回的表单域数据必须使用 Form.createFormField 包装。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(627).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402214"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},f={initData:()=>({isExpand:!1,code:"\n<pre><code class=\"language-html\">&lt;template>\n  &lt;div>\n      &lt;s-form on-submit=\"handleSubmit\" labelCol=\"{{labelCol}}\" wrapperCol=\"{{wrapperCol}}\">\n        &lt;s-formitem label=\"DatePicker\">\n            &lt;s-datepicker decorator=\"{{datePickerRules}}\"/>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"DatePicker[showTime]\">\n            &lt;s-datepicker showTime format=\"YYYY-MM-DD HH:mm:ss\" decorator=\"{{dateTimeRules}}\"/>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"MonthPicker\">\n            &lt;s-monthpicker decorator=\"{{monthRules}}\"/>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"RangePicker\">\n            &lt;s-rangepicker decorator=\"{{rangeRules}}\"/>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"RangePicker[showTime]\">\n            &lt;s-rangepicker showTime format=\"YYYY-MM-DD HH:mm:ss\" decorator=\"{{rangeTimeRules}}\"/>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"TimePicker\">\n            &lt;s-timepicker decorator=\"{{timeRules}}\"/>\n        &lt;/s-formitem>\n        &lt;s-formitem wrapperCol=\"{{buttonWrapperCol}}\">\n            &lt;s-button type=\"primary\" htmlType=\"submit\">Submit&lt;/s-button>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Button, DatePicker, TimePicker} from 'santd';\n\nexport default Form.create({name: 'time_related_controls'})({\n    components: {\n        's-form': Form,\n        's-formitem': Form.FormItem,\n        's-button': Button,\n        's-datepicker': DatePicker,\n        's-monthpicker': DatePicker.MonthPicker,\n        's-rangepicker': DatePicker.RangePicker,\n        's-timepicker': TimePicker\n    },\n    initData () {\n        return {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 8}\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 16}\n            },\n            buttonWrapperCol: {\n                xs: {span: 24, offset: 0},\n                sm: {span: 16, offset: 8}\n            },\n            datePickerRules: {\n                name: 'datePicker',\n                rules: [{type: 'object', required: true, message: 'Please select time!'}]\n            },\n            dateTimeRules: {\n                name: 'dateTimePicker',\n                rules: [{type: 'object', required: true, message: 'Please select time!'}]\n            },\n            monthRules: {\n                name: 'monthPicker',\n                rules: [{type: 'object', required: true, message: 'Please select time!'}]\n            },\n            rangeRules: {\n                name: 'rangePicker',\n                rules: [{type: 'array', required: true, message: 'Please select time!'}]\n            },\n            rangeTimeRules: {\n                name: 'rangeTimePicker',\n                rules: [{type: 'array', required: true, message: 'Please select time!'}]\n            },\n            timeRules: {\n                name: 'timePicker',\n                rules: [{type: 'object', required: true, message: 'Please select time!'}]\n            }\n        }\n    },\n    handleSubmit(e) {\n        e.preventDefault();\n        this.validateFields((err, values) => {\n            const rangeValue = values['rangePicker'];\n            const rangeTimeValue = values['rangeTimePicker'];\n            const results = {\n                ...values,\n                'datePicker': values['datePicker'].format('YYYY-MM-DD'),\n                'dateTimePicker': values['dateTimePicker'].format('YYYY-MM-DD HH:mm:ss'),\n                'monthPicker': values['monthPicker'].format('YYYY-MM'),\n                'rangePicker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n                'rangeTimePicker': [\n                    rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\n                    rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss')\n                ],\n                'timePicker': values['timePicker'].format('HH:mm:ss'),\n            };\n            console.log('Received values of form: ', results);\n        });\n    }\n});\n&lt;/script></code></pre>",text:'\n<h4 id="时间类控件"><span>时间类控件</span><a href="#时间类控件" class="anchor">#</a></h4><p>时间类组件的 <code>value</code> 类型为 <code>dayjs</code> 对象，所以在提交服务器前需要预处理。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(628).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402206"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},g={initData:()=>({isExpand:!1,code:"\n<pre><code class=\"language-html\">&lt;template>\n  &lt;div>\n      &lt;s-form>\n        &lt;s-formitem\n            label=\"Prime between 8 & 12\"\n            labelCol=\"{{labelCol}}\"\n            wrapperCol=\"{{wrapperCol}}\"\n            validateStatus=\"{{number.validateStatus}}\"\n            help=\"{{number.errorMsg || tips}}\"\n        >\n            &lt;s-inputnumber min=\"{{8}}\" max=\"{{12}}\" value=\"{{number.value}}\" on-change=\"handleNumberChange\">&lt;/s-inputnumber>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport {Form, InputNumber} from 'santd';\n\nfunction validatePrimeNumber(number) {\n    if (number === 11) {\n        return {\n            validateStatus: 'success',\n            errorMsg: null,\n        };\n    }\n    return {\n        validateStatus: 'error',\n        errorMsg: 'The prime between 8 and 12 is 11!',\n    };\n}\n\nexport default {\n    components: {\n        's-form': Form,\n        's-formitem': Form.FormItem,\n        's-inputnumber': InputNumber\n    },\n    initData () {\n        return {\n            number: {\n                value: 11\n            },\n            labelCol: {span: 7},\n            wrapperCol: {span: 12},\n            tips: 'A prime is a natural number greater than 1 that has no positive divisors other than 1 and itself.'\n        }\n    },\n    checkPrice(rule, value, callback) {\n        if (value.number > 0) {\n            callback();\n            return;\n        }\n        callback('Price must greater than zero!');\n    },\n    handleNumberChange(value) {\n        this.data.set('number', {\n            ...validatePrimeNumber(value),\n            value\n        })\n    }\n};\n&lt;/script></code></pre>",text:'\n<h4 id="自行处理表单数据"><span>自行处理表单数据</span><a href="#自行处理表单数据" class="anchor">#</a></h4><p>使用 <code>Form.create</code> 处理后的表单具有自动收集数据并校验的功能，但如果您不需要这个功能，或者默认的行为无法满足业务需求，可以选择不使用 <code>Form.create</code> 并自行处理数据。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(629).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402200"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},b={initData:()=>({isExpand:!1,code:'\n<pre><code class="language-html">&lt;template>\n  &lt;div>\n      &lt;s-form labelCol="{{formItemLayout.labelCol}}" wrapperCol="{{formItemLayout.wrapperCol}}">\n        &lt;s-formitem label="Fail" validateStatus="error" help="Should be combination of numbers & alphabets">\n            &lt;s-input placeholder="unavailable choice" id="error">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Warning" validateStatus="warning">\n            &lt;s-input placeholder="warning" id="warning">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Validating" validateStatus="validating" help="The information is being validated..." hasFeedback="{{true}}">\n            &lt;s-input placeholder="I\'m the content is being validated" id="validating">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Success" validateStatus="success" hasFeedback="{{true}}">\n            &lt;s-input placeholder="I\'m the content" id="success">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Warning" validateStatus="warning" hasFeedback="{{true}}">\n            &lt;s-input placeholder="warning" id="warning2">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Fail" validateStatus="error" help="Should be combination of numbers & alphabets" hasFeedback="{{true}}">\n            &lt;s-input placeholder="unavailable choice" id="error2">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Success" validateStatus="success" hasFeedback="{{true}}">\n            &lt;s-datepicker style="width: 100%;">&lt;/s-datepicker>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Success" validateStatus="success" hasFeedback="{{true}}">\n            &lt;s-select defaultValue="1">\n                &lt;s-selectoption value="1">Option 1&lt;/s-selectoption>\n                &lt;s-selectoption value="2">Option 1&lt;/s-selectoption>\n                &lt;s-selectoption value="3">Option 1&lt;/s-selectoption>\n            &lt;/s-select>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Validating" validateStatus="validating" help="The information is being validated..." hasFeedback="{{true}}">\n            &lt;s-cascader defaultValue={{[\'1\']}} options="{{[]}}">&lt;/s-cascader>\n        &lt;/s-formitem>\n        &lt;s-formitem label="inline" style="margin-bottom: 0;">\n            &lt;s-formitem validateStatus="error" help="Please select the correct date" style="display: inline-block; width: calc(50% - 18px)" labelCol="{{{}}}" wrapperCol="{{{}}}">\n                &lt;s-datepicker>&lt;/s-datepicker>\n            &lt;/s-formitem>\n            &lt;span style="display: inline-block; width: 24px; text-align: center;">-&lt;/span>\n            &lt;s-formitem style="display: inline-block; width: calc(50% - 18px)" wrapperCol="{{{}}}" labelCol="{{{}}}">\n                &lt;s-datepicker>&lt;/s-datepicker>\n            &lt;/s-formitem>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Success" validateStatus="success" hasFeedback="{{true}}">\n            &lt;s-inputnumber style="width: 100%;">&lt;/s-inputnumber>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, DatePicker, Select, Cascader, InputNumber} from \'santd\';\n\nexport default {\n    components: {\n        \'s-form\': Form,\n        \'s-formitem\': Form.FormItem,\n        \'s-input\': Input,\n        \'s-select\': Select,\n        \'s-selectoption\': Select.Option,\n        \'s-cascader\': Cascader,\n        \'s-datepicker\': DatePicker,\n        \'s-inputnumber\': InputNumber\n    },\n    initData () {\n        return {\n            formItemLayout: {\n                labelCol: {\n                    xs: {span: 24},\n                    sm: {span: 5}\n                },\n                wrapperCol: {\n                    xs: {span: 24},\n                    sm: {span: 12}\n                },\n            }\n        }\n    }\n}\n&lt;/script></code></pre>',text:'\n<h4 id="自定义校验"><span>自定义校验</span><a href="#自定义校验" class="anchor">#</a></h4><p>我们提供了 <code>validateStatus</code> <code>help</code> <code>hasFeedback</code> 等属性，你可以不需要使用 Form.create 和 decorator，自己定义校验的时机和内容。</p><ol>\n<li><code>validateStatus</code>: 校验状态，可选 &#39;success&#39;, &#39;warning&#39;, &#39;error&#39;, &#39;validating&#39;。</li>\n<li><code>hasFeedback</code>：用于给输入框添加反馈图标。</li>\n<li><code>help</code>：设置校验文案。</li>\n</ol>\n'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(630).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402189"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},x={initData:()=>({isExpand:!1,code:"\n<pre><code class=\"language-html\">&lt;template>\n  &lt;div>\n      &lt;s-form labelCol=\"{{{span: 5}}}\" wrapperCol=\"{{{span: 12}}}\" on-submit=\"handleSubmit\">\n        &lt;s-formitem label=\"Note\">\n            &lt;s-input decorator=\"{{noteDecorator}}\">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label=\"Gender\">\n            &lt;s-select on-change=\"handleSelectChange\" decorator=\"{{genderDecorator}}\">\n                &lt;s-selectoption value=\"male\">male&lt;/s-selectoption>\n                &lt;s-selectoption value=\"female\">female&lt;/s-selectoption>\n            &lt;/s-select>\n        &lt;/s-formitem>\n        &lt;s-formitem wrapperCol=\"{{{span: 12, offset: 5}}}\">\n            &lt;s-button type=\"primary\" htmlType=\"submit\">Submit&lt;/s-button>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, Button, Select} from 'santd';\n\nexport default Form.create({name: 'coordinated'})({\n    components: {\n        's-form': Form,\n        's-formitem': Form.FormItem,\n        's-input': Input,\n        's-button': Button,\n        's-select': Select,\n        's-selectoption': Select.Option\n    },\n    initData () {\n        return {\n            noteDecorator: {\n                name: 'note',\n                rules: [{required: true, message: 'Please input your note!'}]\n            },\n            genderDecorator: {\n                name: 'gender',\n                rules: [{required: true, message: 'Please select your gender!'}]\n            }\n        }\n    },\n    handleSubmit(e) {\n        e.preventDefault();\n        const form = this.data.get('form');\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    },\n    handleSelectChange(value) {\n        this.setFieldsValue({\n            note: &#96;Hi, &#36;&#123;value[0] === 'male' ? 'man' : 'lady'}!&#96;\n        });\n    }\n})\n&lt;/script></code></pre>",text:'\n<h4 id="表单联动"><span>表单联动</span><a href="#表单联动" class="anchor">#</a></h4><p>使用 <code>setFieldsValue</code> 来动态设置其他控件的值。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(631).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402178"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},v={initData:()=>({isExpand:!1,code:'\n<pre><code class="language-html">&lt;template>\n    &lt;div>\n        &lt;s-form layout="{{formLayout}}">\n            &lt;s-formitem label="Form Layout" labelCol="{{formItemLayout.labelCol}}" wrapperCol="{{formItemLayout.wrapperCol}}">\n                &lt;s-radiogroup defaultValue="horizontal" value="{{formLayout}}" on-change="handleFormLayoutChange" name="layout">\n                    &lt;s-radiobutton value="horizontal">Horizontal&lt;/s-radiobutton>\n                    &lt;s-radiobutton value="vertical">Vertical&lt;/s-radiobutton>\n                    &lt;s-radiobutton value="inline">Inline&lt;/s-radiobutton>\n                &lt;/s-radiogroup>\n            &lt;/s-formitem>\n            &lt;s-formitem label="Field A" labelCol="{{formItemLayout.labelCol}}" wrapperCol="{{formItemLayout.wrapperCol}}">\n                &lt;s-input placeholder="input placeholder">&lt;/s-input>\n            &lt;/s-formitem>\n            &lt;s-formitem label="Field B" labelCol="{{formItemLayout.labelCol}}" wrapperCol="{{formItemLayout.wrapperCol}}">\n                &lt;s-input placeholder="input placeholder">&lt;/s-input>\n            &lt;/s-formitem>\n            &lt;s-formitem labelCol="{{buttonItemLayout.labelCol}}" wrapperCol="{{buttonItemLayout.wrapperCol}}">\n                &lt;s-button type="primary">Submit&lt;/s-button>\n            &lt;/s-formitem>\n        &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, Radio, Button} from \'santd\';\n\nexport default {\n    components: {\n        \'s-form\': Form,\n        \'s-formitem\': Form.FormItem,\n        \'s-input\': Input,\n        \'s-button\': Button,\n        \'s-radiogroup\': Radio.Group,\n        \'s-radiobutton\': Radio.Button\n    },\n    initData() {\n        return {\n            formLayout: \'horizontal\'\n        };\n    },\n    computed: {\n        formItemLayout() {\n            const formLayout = this.data.get(\'formLayout\');\n            return formLayout === \'horizontal\'\n                ? {labelCol: {span: 4}, wrapperCol: {span: 14}}\n                : {}\n        },\n        buttonItemLayout() {\n            const formLayout = this.data.get(\'formLayout\');\n            return formLayout === \'horizontal\'\n                ? {labelCol: {}, wrapperCol: {span: 14, offset: 4}}\n                : {}\n        }\n    },\n    handleFormLayoutChange(e) {\n        this.data.set(\'formLayout\', e.target.value);\n    }\n}\n&lt;/script></code></pre>',text:'\n<h4 id="表单布局"><span>表单布局</span><a href="#表单布局" class="anchor">#</a></h4><p>表单有三种布局</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(632).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402170"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},w={initData:()=>({isExpand:!1,code:'\n<pre><code class="language-html">&lt;template>\n  &lt;div>\n      &lt;s-form>\n        &lt;s-formitem label="Name" labelCol="{{formItemLayout.labelCol}}" wrapperCol="{{formItemLayout.wrapperCol}}">\n            &lt;s-input placeholder="please input your name" decorator="{{usernameDecorator}}">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Nickname" labelCol="{{formItemLayout.labelCol}}" wrapperCol="{{formItemLayout.wrapperCol}}">\n            &lt;s-input placeholder="please input your nickname" decorator="{{nicknameDecorator}}">&lt;/s-input>\n        &lt;/s-formitem>\n        &lt;s-formitem labelCol="{{formTailLayout.labelCol}}" wrapperCol="{{formTailLayout.wrapperCol}}">\n            &lt;s-checkbox checked="{{checkNick}}" on-change="handleChange">Nickame is required&lt;/s-checkbox>\n        &lt;/s-formitem>\n        &lt;s-formitem labelCol="{{formTailLayout.labelCol}}" wrapperCol="{{formTailLayout.wrapperCol}}">\n            &lt;s-button type="primary" on-click="handleCheck">Check&lt;/s-button>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {Form, Input, Checkbox, Button} from \'santd\';\n\nexport default Form.create({name: \'dynamic_rule\'})({\n    components: {\n        \'s-form\': Form,\n        \'s-formitem\': Form.FormItem,\n        \'s-input\': Input,\n        \'s-button\': Button,\n        \'s-checkbox\': Checkbox\n    },\n    initData () {\n        return {\n            checkNick: false,\n            formItemLayout: {\n                labelCol: {span: 4},\n                wrapperCol: {span: 8}\n            },\n            formTailLayout: {\n                labelCol: {span: 4},\n                wrapperCol: {span: 8, offset: 4}\n            },\n            usernameDecorator: {\n                name: \'username\',\n                rules: [{required: true, message: \'Please input your name\'}]\n            }\n        }\n    },\n    computed: {\n        nicknameDecorator() {\n            const checkNick = this.data.get(\'checkNick\');\n            return {\n                name: \'nickname\',\n                rules: [{required: checkNick, message: \'Please input your nickname\'}]\n            };\n        }\n    },\n    handleChange(e) {\n        this.data.set(\'checkNick\', e.target.checked);\n        this.nextTick(() => {\n            this.validateFields([\'nickname\'], {force: true});\n        })\n    },\n    handleCheck() {\n        const form = this.data.get(\'form\');\n        form.validateFields((err) => {\n            if (!err) {\n                console.info(\'success\');\n            }\n        });\n    }\n})\n&lt;/script>\n&lt;style>\n.login-form-forgot {\n    float: right;\n}\n.login-form-button {\n    width: 100%;\n}\n&lt;/style></code></pre>',text:'\n<h4 id="动态校验规则"><span>动态校验规则</span><a href="#动态校验规则" class="anchor">#</a></h4><p>根据不同情况执行不同的校验规则。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(633).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402145"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'},y={initData:()=>({isExpand:!1,code:'\n<pre><code class="language-html">&lt;template>\n  &lt;div>\n      &lt;s-form labelCol="{{formItemLayout.labelCol}}" wrapperCol="{{formItemLayout.wrapperCol}}" on-submit="handleSubmit">\n        &lt;s-formitem label="Plain Text">\n            &lt;span class="san-form-text">China&lt;/span>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Select" hasFeedback="{{true}}">\n            &lt;s-select placeholder="Please select a country" decorator="{{selectDecorator}}">\n                &lt;s-selectoption value="china">China&lt;/s-selectoption>\n                &lt;s-selectoption value="usa">U.S.A&lt;/s-selectoption>\n            &lt;/s-select>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Select[multiple]">\n            &lt;s-select mode="multiple" placeholder="Please select favourite colors" decorator="{{selectMultipleDecorator}}">\n                &lt;s-selectoption value="red">Red&lt;/s-selectoption>\n                &lt;s-selectoption value="green">Green&lt;/s-selectoption>\n                &lt;s-selectoption value="blue">blue&lt;/s-selectoption>\n            &lt;/s-select>\n        &lt;/s-formitem>\n        &lt;s-formitem label="InputNumber">\n            &lt;s-inputnumber min="{{1}}" max="{{10}}" decorator="{{inputNumberDecorator}}">&lt;/s-inputnumber>\n            &lt;span class="san-form-text"> machines&lt;/span>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Switch" decorator="{{switchDecorator}}">\n            &lt;s-switch>&lt;/s-switch>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Slider" decorator="{{sliderDecorator}}">\n            &lt;s-slider marks="{{{0: \'A\', 20: \'B\', 40: \'C\', 60: \'D\', 80: \'E\', 100: \'F\'}}}">&lt;/s-slider>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Radio.Group">\n            &lt;s-radiogroup decorator="{{radioGroupDecorator}}" name="radiogroup">\n                &lt;s-radio value="a">item 1&lt;/s-radio>\n                &lt;s-radio value="b">item 2&lt;/s-radio>\n                &lt;s-radio value="c">item 3&lt;/s-radio>\n            &lt;/s-radiogroup>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Radio.Button">\n            &lt;s-radiogroup decorator="{{radioButtonDecorator}}" name="radiobutton">\n                &lt;s-radiobutton value="a">item 1&lt;/s-radiobutton>\n                &lt;s-radiobutton value="b">item 2&lt;/s-radiobutton>\n                &lt;s-radiobutton value="c">item 3&lt;/s-radiobutton>\n            &lt;/s-radiogroup>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Checkbox.Group">\n            &lt;s-checkboxgroup style="width: 100%;" decorator="{{checkboxGroupDecorator}}">\n                &lt;s-row>\n                    &lt;s-col span="{{8}}">&lt;s-checkbox value="A">A&lt;/s-checkbox>&lt;/s-col>\n                    &lt;s-col span="{{8}}">&lt;s-checkbox value="B">B&lt;/s-checkbox>&lt;/s-col>\n                    &lt;s-col span="{{8}}">&lt;s-checkbox value="C">C&lt;/s-checkbox>&lt;/s-col>\n                    &lt;s-col span="{{8}}">&lt;s-checkbox value="D">D&lt;/s-checkbox>&lt;/s-col>\n                    &lt;s-col span="{{8}}">&lt;s-checkbox value="E">E&lt;/s-checkbox>&lt;/s-col>\n                &lt;/s-row>\n            &lt;/s-checkboxgroup>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Rate">\n            &lt;s-rate decorator="{{rateDecorator}}">&lt;/s-rate>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Upload" extra="longgggggggggggggggggggggggggg">\n            &lt;s-upload decorator="{{uploadDecorator}}" name="logo" action="https://www.mocky.io/v2/5cc8019d300000980a055e76" listType="picture">\n                &lt;s-button>&lt;s-icon type="upload">Click to upload&lt;/s-icon>&lt;/s-button>\n            &lt;/s-upload>\n        &lt;/s-formitem>\n        &lt;s-formitem label="Dragger">\n            &lt;s-dragger decorator="{{draggerDecorator}}" name="files" action="https://www.mocky.io/v2/5cc8019d300000980a055e76">\n                &lt;p class="san-upload-drag-icon">\n                  &lt;s-icon type="inbox" />\n                &lt;/p>\n                &lt;p class="san-upload-text">Click or drag file to this area to upload&lt;/p>\n                &lt;p class="san-upload-hint">Support for a single or bulk upload.&lt;/p>\n            &lt;/s-dragger>\n        &lt;/s-formitem>\n        &lt;s-formitem wrapperCol="{{{span: 12, offset: 6}}}">\n            &lt;s-button type="primary" htmlType="submit">Submit&lt;/s-button>\n        &lt;/s-formitem>\n      &lt;/s-form>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nimport {\n    Row,\n    Col,\n    Form,\n    InputNumber,\n    Icon,\n    Checkbox,\n    Upload,\n    Button,\n    Select,\n    Switch,\n    Radio,\n    Slider,\n    Rate\n} from \'santd\';\n\nexport default Form.create({name: \'validate_other\'})({\n    components: {\n        \'s-form\': Form,\n        \'s-formitem\': Form.FormItem,\n        \'s-select\': Select,\n        \'s-selectoption\': Select.Option,\n        \'s-inputnumber\': InputNumber,\n        \'s-switch\': Switch,\n        \'s-radio\': Radio,\n        \'s-radiogroup\': Radio.Group,\n        \'s-radiobutton\': Radio.Button,\n        \'s-slider\': Slider,\n        \'s-button\': Button,\n        \'s-icon\': Icon,\n        \'s-rate\': Rate,\n        \'s-checkbox\': Checkbox,\n        \'s-checkboxgroup\': Checkbox.Group,\n        \'s-upload\': Upload,\n        \'s-dragger\': Upload.Dragger,\n        \'s-row\': Row,\n        \'s-col\': Col\n    },\n    initData () {\n        return {\n            formItemLayout: {\n                labelCol: {\n                    span: 6\n                },\n                wrapperCol: {\n                    span: 14\n                },\n            },\n            selectDecorator: {\n                name: \'select\',\n                rules: [{required: true, message: \'Please select your country!\'}]\n            },\n            selectMultipleDecorator: {\n                name: \'select_multiple\',\n                rules: [{required: true, message: \'Please select your favourite colors!\'}]\n            },\n            inputNumberDecorator: {\n                name: \'input_number\',\n                initialValue: 3\n            },\n            switchDecorator: {\n                name: \'switch\',\n                valuePropName: \'checked\'\n            },\n            sliderDecorator: {\n                name: \'slider\'\n            },\n            radioGroupDecorator: {\n                name: \'radio_group\'\n            },\n            radioButtonDecorator: {\n                name: \'radio_button\'\n            },\n            checkboxGroupDecorator: {\n                name: \'checkbox_group\',\n                initialValue: [\'A\', \'B\']\n            },\n            rateDecorator: {\n                name: \'rate\',\n                initialValue: 3\n            },\n            uploadDecorator: {\n                name: \'upload\',\n                valuePropName: \'fileList\',\n                getValueFromEvent: this.normFile\n            },\n            draggerDecorator: {\n                name: \'dragger\',\n                valuePropName: \'fileList\',\n                getValueFromEvent: this.normFile\n            }\n        }\n    },\n    handleSubmit(e) {\n        e.preventDefault();\n        const form = this.data.get(\'form\');\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log(\'Received values of form: \', values);\n            }\n        });\n    },\n    normFile(e) {\n        console.log(\'Upload event:\', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    }\n})\n&lt;/script></code></pre>',text:'\n<h4 id="校验其他组件"><span>校验其他组件</span><a href="#校验其他组件" class="anchor">#</a></h4><p>以上演示没有出现的表单控件对应的校验演示。</p>'}),toggleExpand(){this.data.set("isExpand",!this.data.get("isExpand"))},components:{"code-preview":n(636).a},template:'<section class="code-box {{isExpand?\'expand\':\'\'}}" id="components-demo-1623747402157"><section class="code-box-demo"><code-preview></code-preview></section><section class="code-box-meta markdown">{{ text | raw}}<span class="code-expand-icon" on-click="toggleExpand"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg" class="{{isExpand?\'code-expand-icon-hide\':\'code-expand-icon-show\'}}"><img alt="expand code" src="https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg" class="{{isExpand?\'code-expand-icon-show\':\'code-expand-icon-hide\'}}"></span></section><section class="highlight-wrapper {{isExpand?\'highlight-wrapper-expand\':\'\'}}">{{ code | raw}}</section></section>'};t.default=a.a.defineComponent({components:{desc:s,readme:r,basic:l,login:i,register:d,search:c,modal:p,dynamic:m,customform:u,date:f,data:h,customdata:g,customvalidate:b,coordinated:x,layout:v,dynamicrule:w,validate:y},template:"\n        <div>\n            <desc/>\n            <basic/>\n            <login/>\n            <register/>\n            <search/>\n            <modal/>\n            <dynamic/>\n            <date/>\n            <customform/>\n            <data/>\n            <customdata/>\n            <customvalidate/>\n            <coordinated/>\n            <layout/>\n            <dynamicrule/>\n            <validate/>\n            <readme/>\n        </div>\n    "})},612:function(e,t,n){var o=n(4),a=n(613);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var s={insert:"head",singleton:!1};o(a,s);e.exports=a.locals||{}},613:function(e,t,n){(t=n(5)(!1)).push([e.i,"\n.login-form-forgot {\n    float: right;\n}\n.login-form-button {\n    width: 100%;\n}\n",""]),e.exports=t},615:function(e,t,n){var o=n(4),a=n(616);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var s={insert:"head",singleton:!1};o(a,s);e.exports=a.locals||{}},616:function(e,t,n){(t=n(5)(!1)).push([e.i,"\n.login-form-forgot {\n    float: right;\n}\n.login-form-button {\n    width: 160px;\n}\n",""]),e.exports=t},618:function(e,t,n){var o=n(4),a=n(619);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var s={insert:"head",singleton:!1};o(a,s);e.exports=a.locals||{}},619:function(e,t,n){(t=n(5)(!1)).push([e.i,"\n.san-form.san-advanced-search-form {\n    padding: 24px;\n    background: #fbfbfb;\n    border: 1px solid #d9d9d9;\n    border-radius: 6px;\n}\n\n.san-advanced-search-form .san-form-item .san-row {\n    display: flex;\n}\n\n.search-result-list {\n    margin-top: 16px;\n    border: 1px dashed #e9e9e9;\n    border-radius: 6px;\n    background-color: #fafafa;\n    min-height: 200px;\n    text-align: center;\n    padding-top: 80px;\n}\n",""]),e.exports=t},621:function(e,t,n){var o=n(4),a=n(622);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var s={insert:"head",singleton:!1};o(a,s);e.exports=a.locals||{}},622:function(e,t,n){(t=n(5)(!1)).push([e.i,"\n.collection-create-form_last-form-item {\n    margin-bottom: 0;\n}\n",""]),e.exports=t},624:function(e,t,n){var o=n(4),a=n(625);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var s={insert:"head",singleton:!1};o(a,s);e.exports=a.locals||{}},625:function(e,t,n){(t=n(5)(!1)).push([e.i,"\n.dynamic-delete-button {\n  cursor: pointer;\n  position: relative;\n  top: 4px;\n  font-size: 24px;\n  color: #999;\n  transition: all .3s;\n}\n.dynamic-delete-button:hover {\n  color: #777;\n}\n.dynamic-delete-button[disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n",""]),e.exports=t},634:function(e,t,n){var o=n(4),a=n(635);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var s={insert:"head",singleton:!1};o(a,s);e.exports=a.locals||{}},635:function(e,t,n){(t=n(5)(!1)).push([e.i,"\n.login-form-forgot {\n    float: right;\n}\n.login-form-button {\n    width: 100%;\n}\n",""]),e.exports=t}}]);